-- MySQL Script generated by MySQL Workbench
-- 06/12/16 01:25:03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema thatchpirate
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema thatchpirate
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `thatchpirate` DEFAULT CHARACTER SET utf8 ;
USE `thatchpirate` ;

-- -----------------------------------------------------
-- Table `thatchpirate`.`user_perfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thatchpirate`.`user_perfil` (
  `pefi_code` INT NOT NULL AUTO_INCREMENT COMMENT 'PefiCode (PK)',
  `pefi_nome` VARCHAR(45) NULL COMMENT 'Nome do perfil',
  `pefi_sono` VARCHAR(45) NULL COMMENT 'Sobrenome do perfil',
  `pefi_mail` VARCHAR(45) NULL COMMENT 'Email do perfil',
  `pefi_dnas` DATE NULL COMMENT 'Data de nascimento do perfil',
  `pefi_sexo` CHAR(1) NULL DEFAULT 'M' COMMENT 'Sexo do perfil',
  PRIMARY KEY (`pefi_code`),
  UNIQUE INDEX `pefi_mail_UNIQUE` (`pefi_mail` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thatchpirate`.`sys_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thatchpirate`.`sys_user` (
  `user_code` INT NOT NULL AUTO_INCREMENT COMMENT 'UserCode (PK)',
  `user_nick` VARCHAR(32) NOT NULL COMMENT 'Apelido do usuario',
  `user_pass` VARCHAR(16) NOT NULL COMMENT 'Senha do usuario',
  `user_pefi` INT NOT NULL COMMENT 'Perfi (FK)',
  PRIMARY KEY (`user_code`),
  UNIQUE INDEX `user_nick_UNIQUE` (`user_nick` ASC),
  INDEX `user_pefi_idx` (`user_pefi` ASC),
  CONSTRAINT `user_pefi`
    FOREIGN KEY (`user_pefi`)
    REFERENCES `thatchpirate`.`user_perfil` (`pefi_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thatchpirate`.`sys_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thatchpirate`.`sys_roles` (
  `role_code` INT NOT NULL AUTO_INCREMENT COMMENT 'RoleCode (PK)',
  `role_nome` VARCHAR(100) NOT NULL COMMENT 'Nome da permissão',
  `role_desc` VARCHAR(255) NULL COMMENT 'Descrição da permissão',
  PRIMARY KEY (`role_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thatchpirate`.`sys_user_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thatchpirate`.`sys_user_roles` (
  `rous_code` INT NOT NULL AUTO_INCREMENT COMMENT 'RousCode (PK)',
  `rous_user` INT NOT NULL COMMENT 'Usuario (FK)',
  `rous_role` INT NOT NULL COMMENT 'Permissão (FK)',
  PRIMARY KEY (`rous_code`, `rous_user`, `rous_role`),
  INDEX `rous_user_idx` (`rous_user` ASC),
  CONSTRAINT `rous_user`
    FOREIGN KEY (`rous_user`)
    REFERENCES `thatchpirate`.`sys_user` (`user_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `rous_role`
    FOREIGN KEY (`rous_role`)
    REFERENCES `thatchpirate`.`sys_roles` (`role_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thatchpirate`.`processador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thatchpirate`.`processador` (
  `proc_code` INT NOT NULL COMMENT 'ProcCode (PK)',
  `proc_fabr` VARCHAR(45) NULL COMMENT 'Fabricante',
  `proc_mode` VARCHAR(45) NULL COMMENT 'Modelo',
  `proc_cloc` VARCHAR(45) NULL COMMENT 'Clock',
  `proc_nucl` VARCHAR(45) NULL COMMENT 'Quantidade de núcleos',
  `proc_cach` VARCHAR(45) NULL COMMENT 'Cache',
  `proc_ano` VARCHAR(45) NULL COMMENT 'Ano de lançamento',
  PRIMARY KEY (`proc_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thatchpirate`.`placa_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thatchpirate`.`placa_video` (
  `pvid_code` INT NOT NULL COMMENT 'PvidCode (PK)',
  `pvid_fabr` VARCHAR(45) NULL COMMENT 'Fabricante',
  `pvid_memv` DECIMAL(3,2) NULL COMMENT 'Memória de vídeo',
  `pvid_outs` VARCHAR(45) NULL COMMENT 'Saídas',
  `pvid_mode` VARCHAR(45) NULL COMMENT 'Modelo placa de vídeo',
  `pvid_ano` VARCHAR(45) NULL COMMENT 'Ano de lançamento',
  `pvid_seri` VARCHAR(45) NULL COMMENT 'Série',
  `pvid_minm` VARCHAR(45) NULL COMMENT 'Memória mínima necessária',
  `pvid_proc` VARCHAR(45) NULL COMMENT 'Processador mínimo necessário',
  PRIMARY KEY (`pvid_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thatchpirate`.`configuracao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thatchpirate`.`configuracao` (
  `sett_code` INT NOT NULL AUTO_INCREMENT COMMENT 'SettCode (PK)',
  `sett_nome` VARCHAR(45) NULL COMMENT 'Nome da configuração para facilidade do usuario',
  `sett_memo` DECIMAL(3,1) NOT NULL COMMENT 'Memória da configuração (em GB)',
  `sett_pvid` INT NOT NULL COMMENT 'Placa de vídeo (FK)',
  `sett_proc` INT NOT NULL COMMENT 'Processador (FK)',
  `sett_user` INT NOT NULL COMMENT 'Usuario (FK)',
  PRIMARY KEY (`sett_code`),
  INDEX `sett_user_idx` (`sett_user` ASC),
  INDEX `sett_proc_idx` (`sett_proc` ASC),
  INDEX `sett_pvid_idx` (`sett_pvid` ASC),
  CONSTRAINT `sett_user`
    FOREIGN KEY (`sett_user`)
    REFERENCES `thatchpirate`.`sys_user` (`user_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `sett_proc`
    FOREIGN KEY (`sett_proc`)
    REFERENCES `thatchpirate`.`processador` (`proc_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `sett_pvid`
    FOREIGN KEY (`sett_pvid`)
    REFERENCES `thatchpirate`.`placa_video` (`pvid_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thatchpirate`.`jogo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thatchpirate`.`jogo` (
  `game_code` INT NOT NULL,
  `game_nome` VARCHAR(45) NULL COMMENT 'Nome do jogo',
  `game_deve` VARCHAR(45) NULL COMMENT 'Desenvolvedor do jogo',
  `game_dist` VARCHAR(45) NULL COMMENT 'Distribuidor do jogo',
  `game_imge` VARCHAR(45) NULL COMMENT 'Caminho da imagem do jogo (capa ou screenshot)',
  `game_genr` VARCHAR(45) NULL COMMENT 'Genero do jogo',
  PRIMARY KEY (`game_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thatchpirate`.`nota`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thatchpirate`.`nota` (
  `nota_code` INT NOT NULL COMMENT 'NotaCode (PK)',
  `nota_pont` DECIMAL(3,1) NOT NULL COMMENT 'Voto (numero)',
  `nota_sett` INT NOT NULL COMMENT 'Configuração (FK)',
  `nota_game` INT NOT NULL COMMENT 'Jogo (FK)',
  `nota_user` INT NOT NULL COMMENT 'Usuario (FK)',
  PRIMARY KEY (`nota_code`),
  INDEX `nota_sett_idx` (`nota_sett` ASC),
  INDEX `nota_game_idx` (`nota_game` ASC),
  INDEX `nota_user_idx` (`nota_user` ASC),
  CONSTRAINT `nota_sett`
    FOREIGN KEY (`nota_sett`)
    REFERENCES `thatchpirate`.`configuracao` (`sett_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `nota_game`
    FOREIGN KEY (`nota_game`)
    REFERENCES `thatchpirate`.`jogo` (`game_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `nota_user`
    FOREIGN KEY (`nota_user`)
    REFERENCES `thatchpirate`.`sys_user` (`user_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
